{"ast":null,"code":"import { nanoid } from 'nanoid';\nimport { configure } from \"mobx\";\nconfigure({\n  enforceActions: \"never\"\n});\nexport var createTodoStore = function createTodoStore() {\n  var store = {\n    filter: \"all\",\n    todos: [],\n    addTodo: function addTodo(title) {\n      store.todos.push({\n        id: nanoid(),\n        title: title,\n        done: false\n      });\n    },\n    removeTodo: function removeTodo(id) {\n      store.todos = store.todos.filter(function (todo) {\n        return todo.id !== id;\n      });\n    },\n    toggleDone: function toggleDone(id) {\n      var todo = store.todos.find(function (todo) {\n        return todo.id === id;\n      });\n\n      if (todo) {\n        todo.done = !todo.done;\n      }\n    },\n    show: function show(filter) {\n      switch (filter) {\n        case \"all\":\n          return store.todos;\n\n        case \"active\":\n          return store.todos.filter(function (todo) {\n            return !todo.done;\n          });\n\n        case \"completed\":\n          return store.todos.filter(function (todo) {\n            return todo.done;\n          });\n\n        default:\n          return store.todos;\n      }\n    },\n    setFilter: function setFilter(filter) {\n      store.filter = filter;\n    },\n    deleteTodos: function deleteTodos(ids) {\n      store.todos = store.todos.filter(function (todo) {\n        return !ids.includes(todo.id);\n      });\n    },\n    changeStatus: function changeStatus(ids, status) {\n      store.todos = store.todos.map(function (todo) {\n        if (ids.includes(todo.id)) {\n          todo.done = status === \"completed\";\n        }\n\n        return todo;\n      });\n    }\n  };\n  return store;\n};","map":{"version":3,"names":["nanoid","configure","enforceActions","createTodoStore","store","filter","todos","addTodo","title","push","id","done","removeTodo","todo","toggleDone","find","show","setFilter","deleteTodos","ids","includes","changeStatus","status","map"],"sources":["/Users/vadymmelnychenko/WebstormProjects/test-task/src/stores/todo.store.ts"],"sourcesContent":["import {nanoid} from 'nanoid'\nimport {toJS} from \"mobx\";\nimport {configure} from \"mobx\"\n\nconfigure({\n    enforceActions: \"never\",\n})\n\nexport interface ITodo {\n    id: string;\n    title: string;\n    done: boolean\n}\n\n\nexport interface ITodoStore {\n    filter: string;\n    todos: ITodo[];\n    addTodo: (title: string) => void;\n    removeTodo: (id: string) => void;\n    toggleDone: (id: string) => void;\n    show: (filter: string) => ITodo[];\n    setFilter: (filter: string) => void;\n    deleteTodos: (ids: string[]) => void;\n    changeStatus: (ids: string[], status: string) => void;\n}\n\nexport const createTodoStore = () => {\n    const store: ITodoStore = {\n        filter: \"all\",\n        todos: [],\n        addTodo: (title) => {\n            store.todos.push({\n                id: nanoid(),\n                title,\n                done: false\n            })\n        },\n        removeTodo: (id) => {\n            store.todos = store.todos.filter(todo => todo.id !== id)\n        },\n        toggleDone: (id) => {\n            const todo = store.todos.find(todo => todo.id === id)\n            if (todo) {\n                todo.done = !todo.done\n            }\n        },\n        show: (filter) => {\n            switch (filter) {\n                case \"all\":\n                    return store.todos\n                case \"active\":\n                    return store.todos.filter(todo => !todo.done)\n                case \"completed\":\n                    return store.todos.filter(todo => todo.done)\n                default:\n                    return store.todos\n            }\n        },\n        setFilter: (filter) => {\n            store.filter = filter\n        },\n        deleteTodos: (ids) => {\n            store.todos = store.todos.filter(todo => !ids.includes(todo.id))\n        },\n        changeStatus: (ids, status) => {\n            store.todos = store.todos.map(todo => {\n                if (ids.includes(todo.id)) {\n                    todo.done = status === \"completed\"\n                }\n                return todo\n            })\n        }\n    }\n    return store\n}\n"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,QAArB;AAEA,SAAQC,SAAR,QAAwB,MAAxB;AAEAA,SAAS,CAAC;EACNC,cAAc,EAAE;AADV,CAAD,CAAT;AAuBA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;EACjC,IAAMC,KAAiB,GAAG;IACtBC,MAAM,EAAE,KADc;IAEtBC,KAAK,EAAE,EAFe;IAGtBC,OAAO,EAAE,iBAACC,KAAD,EAAW;MAChBJ,KAAK,CAACE,KAAN,CAAYG,IAAZ,CAAiB;QACbC,EAAE,EAAEV,MAAM,EADG;QAEbQ,KAAK,EAALA,KAFa;QAGbG,IAAI,EAAE;MAHO,CAAjB;IAKH,CATqB;IAUtBC,UAAU,EAAE,oBAACF,EAAD,EAAQ;MAChBN,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,CAAYD,MAAZ,CAAmB,UAAAQ,IAAI;QAAA,OAAIA,IAAI,CAACH,EAAL,KAAYA,EAAhB;MAAA,CAAvB,CAAd;IACH,CAZqB;IAatBI,UAAU,EAAE,oBAACJ,EAAD,EAAQ;MAChB,IAAMG,IAAI,GAAGT,KAAK,CAACE,KAAN,CAAYS,IAAZ,CAAiB,UAAAF,IAAI;QAAA,OAAIA,IAAI,CAACH,EAAL,KAAYA,EAAhB;MAAA,CAArB,CAAb;;MACA,IAAIG,IAAJ,EAAU;QACNA,IAAI,CAACF,IAAL,GAAY,CAACE,IAAI,CAACF,IAAlB;MACH;IACJ,CAlBqB;IAmBtBK,IAAI,EAAE,cAACX,MAAD,EAAY;MACd,QAAQA,MAAR;QACI,KAAK,KAAL;UACI,OAAOD,KAAK,CAACE,KAAb;;QACJ,KAAK,QAAL;UACI,OAAOF,KAAK,CAACE,KAAN,CAAYD,MAAZ,CAAmB,UAAAQ,IAAI;YAAA,OAAI,CAACA,IAAI,CAACF,IAAV;UAAA,CAAvB,CAAP;;QACJ,KAAK,WAAL;UACI,OAAOP,KAAK,CAACE,KAAN,CAAYD,MAAZ,CAAmB,UAAAQ,IAAI;YAAA,OAAIA,IAAI,CAACF,IAAT;UAAA,CAAvB,CAAP;;QACJ;UACI,OAAOP,KAAK,CAACE,KAAb;MARR;IAUH,CA9BqB;IA+BtBW,SAAS,EAAE,mBAACZ,MAAD,EAAY;MACnBD,KAAK,CAACC,MAAN,GAAeA,MAAf;IACH,CAjCqB;IAkCtBa,WAAW,EAAE,qBAACC,GAAD,EAAS;MAClBf,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,CAAYD,MAAZ,CAAmB,UAAAQ,IAAI;QAAA,OAAI,CAACM,GAAG,CAACC,QAAJ,CAAaP,IAAI,CAACH,EAAlB,CAAL;MAAA,CAAvB,CAAd;IACH,CApCqB;IAqCtBW,YAAY,EAAE,sBAACF,GAAD,EAAMG,MAAN,EAAiB;MAC3BlB,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,CAAYiB,GAAZ,CAAgB,UAAAV,IAAI,EAAI;QAClC,IAAIM,GAAG,CAACC,QAAJ,CAAaP,IAAI,CAACH,EAAlB,CAAJ,EAA2B;UACvBG,IAAI,CAACF,IAAL,GAAYW,MAAM,KAAK,WAAvB;QACH;;QACD,OAAOT,IAAP;MACH,CALa,CAAd;IAMH;EA5CqB,CAA1B;EA8CA,OAAOT,KAAP;AACH,CAhDM"},"metadata":{},"sourceType":"module"}