{"ast":null,"code":"var _jsxFileName = \"/Users/vadymmelnychenko/WebstormProjects/test-task/src/context/stores-context.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect } from 'react';\nimport { createTodoStore } from \"../stores/todo.store\";\nimport { useLocalObservable } from 'mobx-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar TodoContext = /*#__PURE__*/createContext({});\nexport var TodoProvider = function TodoProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var todoStore = useLocalObservable(createTodoStore);\n  useEffect(function () {\n    localStorage.setItem('todos', JSON.stringify(todoStore.todos));\n  }, [todoStore.todos]);\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: todoStore,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TodoProvider, \"gF1reF2Bst8YIBr+vY1LvfzNDLY=\", false, function () {\n  return [useLocalObservable];\n});\n\n_c = TodoProvider;\nexport var useTodoStore = function useTodoStore() {\n  _s2();\n\n  return useContext(TodoContext);\n};\n\n_s2(useTodoStore, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","createTodoStore","useLocalObservable","TodoContext","TodoProvider","children","todoStore","localStorage","setItem","JSON","stringify","todos","useTodoStore"],"sources":["/Users/vadymmelnychenko/WebstormProjects/test-task/src/context/stores-context.tsx"],"sourcesContent":["import {createContext, useContext, useEffect} from 'react'\n\nimport {createTodoStore} from \"../stores/todo.store\";\n\nimport {useLocalObservable} from 'mobx-react';\n\nconst TodoContext = createContext({} as ReturnType<typeof createTodoStore>)\n\nexport const TodoProvider = ({children}: any) => {\n    const todoStore = useLocalObservable(createTodoStore)\n\n    useEffect(() => {\n        localStorage.setItem('todos', JSON.stringify(todoStore.todos))\n    } ,[todoStore.todos])\n    return (\n        <TodoContext.Provider value={todoStore}>{children}</TodoContext.Provider>\n    )\n}\nexport const useTodoStore = () => useContext(TodoContext)\n"],"mappings":";;;;;AAAA,SAAQA,aAAR,EAAuBC,UAAvB,EAAmCC,SAAnC,QAAmD,OAAnD;AAEA,SAAQC,eAAR,QAA8B,sBAA9B;AAEA,SAAQC,kBAAR,QAAiC,YAAjC;;AAEA,IAAMC,WAAW,gBAAGL,aAAa,CAAC,EAAD,CAAjC;AAEA,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,OAAqB;EAAA;;EAAA,IAAnBC,QAAmB,QAAnBA,QAAmB;EAC7C,IAAMC,SAAS,GAAGJ,kBAAkB,CAACD,eAAD,CAApC;EAEAD,SAAS,CAAC,YAAM;IACZO,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeJ,SAAS,CAACK,KAAzB,CAA9B;EACH,CAFQ,EAEN,CAACL,SAAS,CAACK,KAAX,CAFM,CAAT;EAGA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEL,SAA7B;IAAA,UAAyCD;EAAzC;IAAA;IAAA;IAAA;EAAA,SADJ;AAGH,CATM;;GAAMD,Y;UACSF,kB;;;KADTE,Y;AAUb,OAAO,IAAMQ,YAAY,GAAG,SAAfA,YAAe;EAAA;;EAAA,OAAMb,UAAU,CAACI,WAAD,CAAhB;AAAA,CAArB;;IAAMS,Y"},"metadata":{},"sourceType":"module"}