{"ast":null,"code":"var _jsxFileName = \"/Users/vadymmelnychenko/WebstormProjects/test-task/src/context/stores-context.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { createContext } from 'react';\nimport { useLocalObservable } from \"mobx-react-lite\";\nimport { nanoid } from 'nanoid';\nimport { toJS } from 'mobx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var todoStore = /*#__PURE__*/createContext({});\nexport var TodoProvider = function TodoProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var store = useLocalObservable(function () {\n    var _localStorage$getItem;\n\n    return {\n      filter: (_localStorage$getItem = localStorage.getItem('filter')) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : 'ALL',\n      todos: localStorage.getItem('todos') ? JSON.parse(localStorage.getItem('todos')) : [{\n        id: nanoid(),\n        title: \"'lala'\",\n        done: false\n      }],\n      addTodo: function addTodo(title) {\n        this.todos.push({\n          id: nanoid(),\n          title: title,\n          done: false\n        });\n        this.show(this.filter);\n        localStorage.setItem('todos', JSON.stringify(this.todos));\n      },\n      removeTodo: function removeTodo(id) {\n        this.todos = this.todos.filter(function (todo) {\n          return todo.id !== id;\n        });\n        this.show(this.filter);\n        localStorage.setItem('todos', JSON.stringify(this.todos));\n      },\n      toggleDone: function toggleDone(id) {\n        this.todos.map(function (todo) {\n          if (todo.id === id) {\n            todo.done = !todo.done;\n          }\n        });\n        localStorage.setItem('todos', JSON.stringify(this.todos));\n      },\n      show: function show(filter) {\n        switch (filter) {\n          case 'ALL':\n            return toJS(this.todos);\n\n          case 'DONE':\n            return toJS(this.todos.filter(function (todo) {\n              return todo.done;\n            }));\n\n          default:\n            return toJS(this.todos);\n        }\n      },\n      setFilter: function setFilter(filter) {\n        this.filter = filter;\n        localStorage.setItem('filter', filter);\n      },\n      deleteTodos: function deleteTodos(ids) {\n        var updateTodos = this.todos.filter(function (todo) {\n          return !ids.includes(todo.id);\n        });\n        this.todos = updateTodos;\n        localStorage.setItem('todos', JSON.stringify(updateTodos));\n      },\n      changeStatus: function changeStatus(ids, status) {\n        this.todos.map(function (todo) {\n          if (ids.includes(todo.id)) {\n            todo.done = status === 'DONE';\n          }\n\n          return todo;\n        });\n        localStorage.setItem('todos', JSON.stringify(this.todos));\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(todoStore.Provider, {\n    value: store,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(TodoProvider, \"v8kuHChjTEmMZ3bg5oZ8zBWX1eE=\", false, function () {\n  return [useLocalObservable];\n});\n\n_c = TodoProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"names":["createContext","useLocalObservable","nanoid","toJS","todoStore","TodoProvider","children","store","filter","localStorage","getItem","todos","JSON","parse","id","title","done","addTodo","push","show","setItem","stringify","removeTodo","todo","toggleDone","map","setFilter","deleteTodos","ids","updateTodos","includes","changeStatus","status"],"sources":["/Users/vadymmelnychenko/WebstormProjects/test-task/src/context/stores-context.tsx"],"sourcesContent":["import { createContext, ReactNode } from 'react';\nimport { useLocalObservable } from \"mobx-react-lite\";\nimport { nanoid } from 'nanoid';\nimport { toJS } from 'mobx';\n\nexport const todoStore = createContext({} as ITodoStore);\n\nexport interface ITodo {\n  id: string;\n  title: string;\n  done: boolean;\n}\n\nexport interface ITodoStore {\n  filter: string;\n  todos: ITodo[];\n  addTodo: (title: string) => void;\n  removeTodo: (id: string) => void;\n  toggleDone: (id: string) => void;\n  show: (filter: string) => ITodo[];\n  setFilter: (filter: string) => void;\n  deleteTodos: (ids: string[]) => void;\n  changeStatus: (ids: string[], status: string) => void;\n}\n\ninterface ITodoProvider {\n  children: ReactNode;\n}\n\nexport const TodoProvider = ({ children }: ITodoProvider) => {\n  const store = useLocalObservable(\n    () =>\n      ({\n        filter: localStorage.getItem('filter') ?? 'ALL',\n        todos: localStorage.getItem('todos')\n          ? JSON.parse(localStorage.getItem('todos')!)\n          : ([\n              {\n                id: nanoid(),\n                title: \"'lala'\",\n                done: false,\n              },\n            ] as ITodo[]),\n        addTodo(title: string) {\n          this.todos.push({\n            id: nanoid(),\n            title,\n            done: false,\n          });\n          this.show(this.filter);\n          localStorage.setItem('todos', JSON.stringify(this.todos));\n        },\n        removeTodo(id: string) {\n          this.todos = this.todos.filter((todo) => todo.id !== id);\n          this.show(this.filter);\n          localStorage.setItem('todos', JSON.stringify(this.todos));\n        },\n        toggleDone(id: string) {\n          this.todos.map((todo) => {\n            if (todo.id === id) {\n              todo.done = !todo.done;\n            }\n          });\n          localStorage.setItem('todos', JSON.stringify(this.todos));\n        },\n        show(filter: string) {\n          switch (filter) {\n            case 'ALL':\n              return toJS(this.todos);\n            case 'DONE':\n              return toJS(this.todos.filter((todo) => todo.done));\n            default:\n              return toJS(this.todos);\n          }\n        },\n        setFilter(filter: string) {\n          this.filter = filter;\n          localStorage.setItem('filter', filter);\n        },\n        deleteTodos(ids: string[]) {\n          const updateTodos = this.todos.filter(\n            (todo) => !ids.includes(todo.id),\n          );\n          this.todos = updateTodos;\n          localStorage.setItem('todos', JSON.stringify(updateTodos));\n        },\n        changeStatus(ids: string[], status: 'DONE' | 'ACTIVE') {\n          this.todos.map((todo) => {\n            if (ids.includes(todo.id)) {\n              todo.done = status === 'DONE';\n            }\n            return todo;\n          });\n          localStorage.setItem('todos', JSON.stringify(this.todos));\n        },\n      } as ITodoStore),\n  );\n\n  return <todoStore.Provider value={store}>{children}</todoStore.Provider>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}