{"ast":null,"code":"import _initializerDefineProperty from \"/Users/vadymmelnychenko/WebstormProjects/test-task/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _classCallCheck from \"/Users/vadymmelnychenko/WebstormProjects/test-task/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vadymmelnychenko/WebstormProjects/test-task/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _applyDecoratedDescriptor from \"/Users/vadymmelnychenko/WebstormProjects/test-task/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"/Users/vadymmelnychenko/WebstormProjects/test-task/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\n\nvar _class, _descriptor, _descriptor2;\n\nimport { nanoid } from 'nanoid';\nimport { action, makeObservable, observable, toJS } from 'mobx';\nvar TodoStore = (_class = /*#__PURE__*/function () {\n  function TodoStore() {\n    _classCallCheck(this, TodoStore);\n\n    _initializerDefineProperty(this, \"filter\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"todos\", _descriptor2, this);\n\n    makeObservable(this);\n  }\n\n  _createClass(TodoStore, [{\n    key: \"addTodo\",\n    value: function addTodo(title) {\n      this.todos.push({\n        id: nanoid(),\n        title: title,\n        done: false\n      });\n      this.show(this.filter);\n      localStorage.setItem('todos', JSON.stringify(this.todos));\n    }\n  }, {\n    key: \"removeTodo\",\n    value: function removeTodo(id) {\n      this.todos = this.todos.filter(function (todo) {\n        return todo.id !== id;\n      });\n      this.show(this.filter);\n      localStorage.setItem('todos', JSON.stringify(this.todos));\n    }\n  }, {\n    key: \"toggleDone\",\n    value: function toggleDone(id) {\n      this.todos.map(function (todo) {\n        if (todo.id === id) {\n          todo.done = !todo.done;\n        }\n      });\n      localStorage.setItem('todos', JSON.stringify(this.todos));\n    }\n  }, {\n    key: \"show\",\n    value: function show(filter) {\n      switch (filter) {\n        case 'ALL':\n          return toJS(this.todos);\n\n        case 'DONE':\n          return toJS(this.todos.filter(function (todo) {\n            return todo.done;\n          }));\n\n        default:\n          return toJS(this.todos);\n      }\n    }\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(filter) {\n      this.filter = filter;\n      localStorage.setItem('filter', filter);\n    }\n  }, {\n    key: \"deleteTodos\",\n    value: function deleteTodos(ids) {\n      var updateTodos = this.todos.filter(function (todo) {\n        return !ids.includes(todo.id);\n      });\n      this.todos = updateTodos;\n      localStorage.setItem('todos', JSON.stringify(updateTodos));\n    }\n  }, {\n    key: \"changeStatus\",\n    value: function changeStatus(ids, status) {\n      this.todos.map(function (todo) {\n        if (ids.includes(todo.id)) {\n          todo.done = status === 'DONE';\n        }\n\n        return todo;\n      });\n      localStorage.setItem('todos', JSON.stringify(this.todos));\n    }\n  }]);\n\n  return TodoStore;\n}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"filter\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _localStorage$getItem;\n\n    return (_localStorage$getItem = localStorage.getItem('filter')) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : 'ALL';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"todos\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return localStorage.getItem('todos') ? JSON.parse(localStorage.getItem('todos')) : [{\n      id: nanoid(),\n      title: \"'lala'\",\n      done: false\n    }];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"addTodo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"addTodo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"removeTodo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"removeTodo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"toggleDone\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"toggleDone\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"show\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"show\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setFilter\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setFilter\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"deleteTodos\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"deleteTodos\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"changeStatus\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"changeStatus\"), _class.prototype)), _class);\nvar todoStore = new TodoStore();\nexport default todoStore;","map":{"version":3,"names":["nanoid","action","makeObservable","observable","toJS","TodoStore","title","todos","push","id","done","show","filter","localStorage","setItem","JSON","stringify","todo","map","ids","updateTodos","includes","status","getItem","parse","todoStore"],"sources":["/Users/vadymmelnychenko/WebstormProjects/test-task/src/stores/todo.store.ts"],"sourcesContent":["import {nanoid} from 'nanoid';\nimport {action, makeObservable, observable, toJS} from 'mobx';\n\nexport interface ITodo {\n    id: string;\n    title: string;\n    done: boolean;\n}\n\nexport interface ITodoStore {\n    filter: string;\n    todos: ITodo[];\n    addTodo: (title: string) => void;\n    removeTodo: (id: string) => void;\n    toggleDone: (id: string) => void;\n    show: (filter: string) => ITodo[];\n    setFilter: (filter: string) => void;\n    deleteTodos: (ids: string[]) => void;\n    changeStatus: (ids: string[], status: string) => void;\n}\n\nclass TodoStore implements ITodoStore {\n\n\n    @observable\n    filter: string = localStorage.getItem('filter') ?? 'ALL';\n    @observable todos: ITodo[] = localStorage.getItem('todos')\n        ? JSON.parse(localStorage.getItem('todos')!)\n        : [\n            {\n                id: nanoid(),\n                title: \"'lala'\",\n                done: false,\n            },\n        ];\n\n    constructor() {\n        makeObservable(this);\n    }\n\n    @action addTodo(title: string) {\n        this.todos.push({\n            id: nanoid(),\n            title,\n            done: false,\n        });\n        this.show(this.filter);\n        localStorage.setItem('todos', JSON.stringify(this.todos));\n    }\n\n    @action removeTodo(id: string) {\n        this.todos = this.todos.filter((todo) => todo.id !== id);\n        this.show(this.filter);\n        localStorage.setItem('todos', JSON.stringify(this.todos));\n    }\n\n    @action toggleDone(id: string) {\n        this.todos.map((todo) => {\n            if (todo.id === id) {\n                todo.done = !todo.done;\n            }\n        });\n        localStorage.setItem('todos', JSON.stringify(this.todos));\n    }\n\n    @action show(filter: string) {\n        switch (filter) {\n            case 'ALL':\n                return toJS(this.todos);\n            case 'DONE':\n                return toJS(this.todos.filter((todo) => todo.done));\n            default:\n                return toJS(this.todos);\n        }\n    }\n\n    @action setFilter(filter: string) {\n        this.filter = filter;\n        localStorage.setItem('filter', filter);\n    }\n\n    @action deleteTodos(ids: string[]) {\n        const updateTodos = this.todos.filter((todo) => !ids.includes(todo.id));\n        this.todos = updateTodos;\n        localStorage.setItem('todos', JSON.stringify(updateTodos));\n    }\n  \n    @action changeStatus(ids: string[], status: string): void {\n        this.todos.map((todo) => {\n            if (ids.includes(todo.id)) {\n                todo.done = status === 'DONE';\n            }\n            return todo;\n        });\n        localStorage.setItem('todos', JSON.stringify(this.todos));\n    }\n}\n\nconst todoStore = new TodoStore();\nexport default todoStore;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}