{"ast":null,"code":"var _jsxFileName = \"/Users/vadymmelnychenko/WebstormProjects/test-task/src/context/stores-context.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { createContext } from \"react\";\nimport { useLocalStore } from \"mobx-react-lite\";\nimport { nanoid } from \"nanoid\";\nimport { toJS } from \"mobx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var todoStore = /*#__PURE__*/createContext({});\nexport var TodoProvider = function TodoProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var store = useLocalStore(function () {\n    var _localStorage$getItem;\n\n    return {\n      filter: (_localStorage$getItem = localStorage.getItem('filter')) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : 'ALL',\n      todos: localStorage.getItem('todos') ? JSON.parse(localStorage.getItem('todos')) : [{\n        id: nanoid(),\n        title: \"'lala'\",\n        done: false\n      }],\n      addTodo: function addTodo(title) {\n        this.todos.push({\n          id: nanoid(),\n          title: title,\n          done: false\n        });\n        this.show(this.filter);\n        localStorage.setItem('todos', JSON.stringify(this.todos));\n      },\n      removeTodo: function removeTodo(id) {\n        this.todos = this.todos.filter(function (todo) {\n          return todo.id !== id;\n        });\n        this.show(this.filter);\n        localStorage.setItem('todos', JSON.stringify(this.todos));\n      },\n      toggleDone: function toggleDone(id) {\n        this.todos.map(function (todo) {\n          if (todo.id === id) {\n            todo.done = !todo.done;\n          }\n        });\n        localStorage.setItem('todos', JSON.stringify(this.todos));\n      },\n      show: function show(filter) {\n        switch (filter) {\n          case \"ALL\":\n            return toJS(this.todos);\n\n          case \"DONE\":\n            return toJS(this.todos.filter(function (todo) {\n              return todo.done;\n            }));\n\n          default:\n            return toJS(this.todos);\n        }\n      },\n      setFilter: function setFilter(filter) {\n        this.filter = filter;\n        localStorage.setItem('filter', filter);\n      },\n      deleteTodos: function deleteTodos(ids) {\n        var updateTodos = this.todos.filter(function (todo) {\n          return !ids.includes(todo.id);\n        });\n        this.todos = updateTodos;\n        localStorage.setItem('todos', JSON.stringify(updateTodos));\n      },\n      changeStatus: function changeStatus(ids, status) {\n        this.todos.map(function (todo) {\n          if (ids.includes(todo.id)) {\n            todo.done = status === 'DONE';\n          }\n\n          return todo;\n        });\n        localStorage.setItem('todos', JSON.stringify(this.todos));\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(todoStore.Provider, {\n    value: store,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TodoProvider, \"IB0PjL6demgr5+qEQQSGmSQMH8s=\", false, function () {\n  return [useLocalStore];\n});\n\n_c = TodoProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"names":["createContext","useLocalStore","nanoid","toJS","todoStore","TodoProvider","children","store","filter","localStorage","getItem","todos","JSON","parse","id","title","done","addTodo","push","show","setItem","stringify","removeTodo","todo","toggleDone","map","setFilter","deleteTodos","ids","updateTodos","includes","changeStatus","status"],"sources":["/Users/vadymmelnychenko/WebstormProjects/test-task/src/context/stores-context.tsx"],"sourcesContent":["import {createContext, ReactNode} from \"react\";\nimport {useLocalStore} from \"mobx-react-lite\";\nimport {nanoid} from \"nanoid\";\nimport {toJS} from \"mobx\";\n\nexport const todoStore = createContext({});\n\nexport interface ITodo {\n    id: string;\n    title: string;\n    done: boolean\n}\n\n\nexport interface ITodoStore {\n    filter: string;\n    todos: ITodo[];\n    addTodo: (title: string) => void;\n    removeTodo: (id: string) => void;\n    toggleDone: (id: string) => void;\n    show: (filter: string) => ITodo[];\n    setFilter: (filter: string) => void;\n    deleteTodos: (ids: string[]) => void;\n    changeStatus: (ids: string[], status: string) => void;\n}\n\n\nexport const TodoProvider = ({children}: ReactNode) => {\n    const store = useLocalStore(() => ({\n        filter: localStorage.getItem('filter') ?? 'ALL',\n        todos: localStorage.getItem('todos') ? JSON.parse(localStorage.getItem('todos')!) : [{\n            id: nanoid(),\n            title: \"'lala'\",\n            done: false\n        },\n        ] as ITodo[],\n        addTodo(title: string) {\n            this.todos.push({\n                id: nanoid(),\n                title,\n                done: false\n            });\n            this.show(this.filter);\n            localStorage.setItem('todos', JSON.stringify(this.todos))\n        },\n        removeTodo(id: string) {\n            this.todos = this.todos.filter(todo => todo.id !== id);\n            this.show(this.filter);\n            localStorage.setItem('todos', JSON.stringify(this.todos))\n        },\n        toggleDone(id: string) {\n            this.todos.map((todo) => {\n                if (todo.id === id) {\n                    todo.done = !todo.done;\n                }\n            });\n            localStorage.setItem('todos', JSON.stringify(this.todos))\n        },\n        show(filter: string) {\n            switch (filter) {\n                case \"ALL\":\n                    return toJS(this.todos);\n                case \"DONE\":\n                    return toJS(this.todos.filter(todo => todo.done));\n                default:\n                    return toJS(this.todos);\n            }\n        },\n        setFilter(filter: string) {\n            this.filter = filter;\n            localStorage.setItem('filter', filter);\n        },\n        deleteTodos(ids: string[]) {\n            const updateTodos = this.todos.filter(todo => !ids.includes(todo.id));\n            this.todos = updateTodos;\n            localStorage.setItem('todos', JSON.stringify(updateTodos))\n        },\n        changeStatus(ids: string[], status: 'DONE' | 'ACTIVE') {\n            this.todos.map(todo => {\n                if (ids.includes(todo.id)) {\n                    todo.done = status === 'DONE';\n                }\n                return todo;\n            });\n            localStorage.setItem('todos', JSON.stringify(this.todos))\n        }\n    } as ITodoStore));\n\n    return (\n        <todoStore.Provider value={store}>{children}</todoStore.Provider>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}