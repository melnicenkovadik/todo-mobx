{"ast":null,"code":"import { nanoid } from 'nanoid';\nexport var createTodoStore = function createTodoStore() {\n  return {\n    todos: localStorage.getItem('todos') ? JSON.parse(localStorage.getItem('todos')) : [{\n      id: nanoid(),\n      title: \"'lala'\",\n      done: false\n    }],\n    addTodo: function addTodo(title) {\n      this.todos.push({\n        id: nanoid(),\n        title: title,\n        done: false\n      });\n      localStorage.setItem('todos', JSON.stringify(this.todos));\n    },\n    removeTodo: function removeTodo(id) {\n      this.todos.filter(function (todo) {\n        return todo.id !== id;\n      });\n      localStorage.setItem('todos', JSON.stringify(this.todos));\n    },\n    toggleDone: function toggleDone(id) {\n      this.todos.map(function (todo) {\n        if (todo.id === id) {\n          todo.done = !todo.done;\n        }\n      });\n      localStorage.setItem('todos', JSON.stringify(this.todos));\n    }\n  };\n};","map":{"version":3,"names":["nanoid","createTodoStore","todos","localStorage","getItem","JSON","parse","id","title","done","addTodo","push","setItem","stringify","removeTodo","filter","todo","toggleDone","map"],"sources":["/Users/vadymmelnychenko/WebstormProjects/test-task/src/stores/todo.store.ts"],"sourcesContent":["import {nanoid} from 'nanoid'\n\nexport interface ITodo {\n    id: string;\n    title: string;\n    done: boolean\n}\n\nexport interface ITodoStore {\n    todos: ITodo[];\n    addTodo: (title: string) => void;\n    removeTodo: (id: string) => void;\n    toggleDone: (id: string) => void;\n}\n\nexport const createTodoStore = () => {\n    return {\n        todos: localStorage.getItem('todos') ? JSON.parse(localStorage.getItem('todos')!) : [{\n                id: nanoid(),\n                title: \"'lala'\",\n                done: false\n            },\n            ] as ITodo[],\n        addTodo(title: string) {\n            this.todos.push({\n                id: nanoid(),\n                title,\n                done: false\n            });\n            localStorage.setItem('todos', JSON.stringify(this.todos))\n        },\n        removeTodo(id: string) {\n            this.todos.filter((todo) => todo.id !== id);\n            localStorage.setItem('todos', JSON.stringify(this.todos))\n        },\n        toggleDone(id: string) {\n            this.todos.map((todo) => {\n                if (todo.id === id) {\n                    todo.done = !todo.done;\n                }\n            });\n            localStorage.setItem('todos', JSON.stringify(this.todos))\n        }\n    } as ITodoStore;\n}\n"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,QAArB;AAeA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;EACjC,OAAO;IACHC,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAgCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAhC,GAA6E,CAAC;MAC7EG,EAAE,EAAEP,MAAM,EADmE;MAE7EQ,KAAK,EAAE,QAFsE;MAG7EC,IAAI,EAAE;IAHuE,CAAD,CADjF;IAOHC,OAPG,mBAOKF,KAPL,EAOoB;MACnB,KAAKN,KAAL,CAAWS,IAAX,CAAgB;QACZJ,EAAE,EAAEP,MAAM,EADE;QAEZQ,KAAK,EAALA,KAFY;QAGZC,IAAI,EAAE;MAHM,CAAhB;MAKAN,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BP,IAAI,CAACQ,SAAL,CAAe,KAAKX,KAApB,CAA9B;IACH,CAdE;IAeHY,UAfG,sBAeQP,EAfR,EAeoB;MACnB,KAAKL,KAAL,CAAWa,MAAX,CAAkB,UAACC,IAAD;QAAA,OAAUA,IAAI,CAACT,EAAL,KAAYA,EAAtB;MAAA,CAAlB;MACAJ,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BP,IAAI,CAACQ,SAAL,CAAe,KAAKX,KAApB,CAA9B;IACH,CAlBE;IAmBHe,UAnBG,sBAmBQV,EAnBR,EAmBoB;MACnB,KAAKL,KAAL,CAAWgB,GAAX,CAAe,UAACF,IAAD,EAAU;QACrB,IAAIA,IAAI,CAACT,EAAL,KAAYA,EAAhB,EAAoB;UAChBS,IAAI,CAACP,IAAL,GAAY,CAACO,IAAI,CAACP,IAAlB;QACH;MACJ,CAJD;MAKAN,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BP,IAAI,CAACQ,SAAL,CAAe,KAAKX,KAApB,CAA9B;IACH;EA1BE,CAAP;AA4BH,CA7BM"},"metadata":{},"sourceType":"module"}