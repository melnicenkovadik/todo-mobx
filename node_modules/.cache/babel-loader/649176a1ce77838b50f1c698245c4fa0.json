{"ast":null,"code":"import _slicedToArray from \"/Users/vadymmelnychenko/WebstormProjects/test-task/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _taggedTemplateLiteral from \"/Users/vadymmelnychenko/WebstormProjects/test-task/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\n\nvar _jsxFileName = \"/Users/vadymmelnychenko/WebstormProjects/test-task/src/components/Todo.tsx\",\n    _templateObject,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Checkbox from \"./Checkbox\";\nimport Button from \"./Button\";\nimport ActionButton from \"./ActionButton\";\nimport RemoveIcon from \"./RemoveIcon\";\nimport { useTodoStore } from \"../context/stores-context\";\nimport { observer } from \"mobx-react-lite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Item = styled.li(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  margin-top: -1px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n\\n\"])));\n_c = Item;\nexport var Todo = _s(observer(_c2 = _s(function (_ref) {\n  _s();\n\n  var id = _ref.id,\n      title = _ref.title,\n      done = _ref.done;\n\n  var _useState = useState(done),\n      _useState2 = _slicedToArray(_useState, 2),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  var todoStore = useTodoStore();\n\n  var handleChecked = function handleChecked() {\n    setChecked(!checked);\n    todoStore.toggleDone(id);\n  };\n\n  var handleRemove = function handleRemove() {\n    return todoStore.removeTodo(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Item, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      checked: checked,\n      onClick: handleChecked,\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: checked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(ActionButton, {\n      onClick: handleRemove,\n      action: \"remove\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, _this);\n}, \"SW6ev2Ary+Uv+KlkihTb2EZSJ6U=\", false, function () {\n  return [useTodoStore];\n})), \"SW6ev2Ary+Uv+KlkihTb2EZSJ6U=\", false, function () {\n  return [useTodoStore];\n});\n_c3 = Todo;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"Todo$observer\");\n$RefreshReg$(_c3, \"Todo\");","map":{"version":3,"names":["useState","styled","Checkbox","Button","ActionButton","RemoveIcon","useTodoStore","observer","Item","li","Todo","id","title","done","checked","setChecked","todoStore","handleChecked","toggleDone","handleRemove","removeTodo"],"sources":["/Users/vadymmelnychenko/WebstormProjects/test-task/src/components/Todo.tsx"],"sourcesContent":["import {useState} from \"react\";\nimport styled from \"styled-components\";\nimport Checkbox from \"./Checkbox\";\nimport Button from \"./Button\";\nimport ActionButton from \"./ActionButton\";\nimport RemoveIcon from \"./RemoveIcon\";\nimport {useTodoStore} from \"../context/stores-context\";\nimport {ITodo} from \"../stores/todo.store\";\nimport {observer} from \"mobx-react-lite\";\n\nconst Item = styled.li`\n  margin-top: -1px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n`;\n\n\nexport const Todo = observer(({id, title, done}: ITodo) => {\n    const [checked, setChecked] = useState(done);\n    const todoStore = useTodoStore()\n\n    const handleChecked = () => {\n        setChecked(!checked);\n        todoStore.toggleDone(id);\n    }\n    const handleRemove = () => todoStore.removeTodo(id)\n    return (\n        <Item>\n            <Button checked={checked} onClick={handleChecked}>\n                <Checkbox checked={checked}/>\n                <span>{title}</span>\n            </Button>\n            <ActionButton onClick={handleRemove} action='remove' display='flex' alignItems='center'\n                          justifyItems='center'>\n                <RemoveIcon/>\n            </ActionButton>\n        </Item>\n    );\n})\n"],"mappings":";;;;;;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,YAAR,QAA2B,2BAA3B;AAEA,SAAQC,QAAR,QAAuB,iBAAvB;;AAEA,IAAMC,IAAI,GAAGP,MAAM,CAACQ,EAAV,2KAAV;KAAMD,I;AASN,OAAO,IAAME,IAAI,MAAGH,QAAQ,UAAC,gBAA8B;EAAA;;EAAA,IAA5BI,EAA4B,QAA5BA,EAA4B;EAAA,IAAxBC,KAAwB,QAAxBA,KAAwB;EAAA,IAAjBC,IAAiB,QAAjBA,IAAiB;;EACvD,gBAA8Bb,QAAQ,CAACa,IAAD,CAAtC;EAAA;EAAA,IAAOC,OAAP;EAAA,IAAgBC,UAAhB;;EACA,IAAMC,SAAS,GAAGV,YAAY,EAA9B;;EAEA,IAAMW,aAAa,GAAG,SAAhBA,aAAgB,GAAM;IACxBF,UAAU,CAAC,CAACD,OAAF,CAAV;IACAE,SAAS,CAACE,UAAV,CAAqBP,EAArB;EACH,CAHD;;EAIA,IAAMQ,YAAY,GAAG,SAAfA,YAAe;IAAA,OAAMH,SAAS,CAACI,UAAV,CAAqBT,EAArB,CAAN;EAAA,CAArB;;EACA,oBACI,QAAC,IAAD;IAAA,wBACI,QAAC,MAAD;MAAQ,OAAO,EAAEG,OAAjB;MAA0B,OAAO,EAAEG,aAAnC;MAAA,wBACI,QAAC,QAAD;QAAU,OAAO,EAAEH;MAAnB;QAAA;QAAA;QAAA;MAAA,SADJ,eAEI;QAAA,UAAOF;MAAP;QAAA;QAAA;QAAA;MAAA,SAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,SADJ,eAKI,QAAC,YAAD;MAAc,OAAO,EAAEO,YAAvB;MAAqC,MAAM,EAAC,QAA5C;MAAqD,OAAO,EAAC,MAA7D;MAAoE,UAAU,EAAC,QAA/E;MACc,YAAY,EAAC,QAD3B;MAAA,uBAEI,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA,SALJ;EAAA;IAAA;IAAA;IAAA;EAAA,SADJ;AAYH,CArB2B;EAAA,QAENb,YAFM;AAAA,GAAX;EAAA,QAEKA,YAFL;AAAA,EAAV;MAAMI,I"},"metadata":{},"sourceType":"module"}