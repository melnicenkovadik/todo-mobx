{"ast":null,"code":"import _classCallCheck from \"/Users/vadymmelnychenko/WebstormProjects/test-task/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vadymmelnychenko/WebstormProjects/test-task/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { nanoid } from 'nanoid';\nimport { makeAutoObservable, toJS } from \"mobx\";\n\nvar TodoStore = /*#__PURE__*/function () {\n  function TodoStore() {\n    var _localStorage$getItem;\n\n    _classCallCheck(this, TodoStore);\n\n    this.filter = (_localStorage$getItem = localStorage.getItem('filter')) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : 'ALL';\n    this.todos = localStorage.getItem('todos') ? JSON.parse(localStorage.getItem('todos')) : [{\n      id: nanoid(),\n      title: \"'lala'\",\n      done: false\n    }];\n    makeAutoObservable(this);\n  }\n\n  _createClass(TodoStore, [{\n    key: \"addTodo\",\n    value: function addTodo(title) {\n      this.todos.push({\n        id: nanoid(),\n        title: title,\n        done: false\n      });\n      this.show(this.filter);\n      localStorage.setItem('todos', JSON.stringify(this.todos));\n    }\n  }, {\n    key: \"removeTodo\",\n    value: function removeTodo(id) {\n      this.todos = this.todos.filter(function (todo) {\n        return todo.id !== id;\n      });\n      this.show(this.filter);\n      localStorage.setItem('todos', JSON.stringify(this.todos));\n    }\n  }, {\n    key: \"toggleDone\",\n    value: function toggleDone(id) {\n      this.todos.map(function (todo) {\n        if (todo.id === id) {\n          todo.done = !todo.done;\n        }\n      });\n      localStorage.setItem('todos', JSON.stringify(this.todos));\n    }\n  }, {\n    key: \"show\",\n    value: function show(filter) {\n      switch (filter) {\n        case \"ALL\":\n          return toJS(this.todos);\n\n        case \"DONE\":\n          return toJS(this.todos.filter(function (todo) {\n            return todo.done;\n          }));\n\n        default:\n          return toJS(this.todos);\n      }\n    }\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(filter) {\n      this.filter = filter;\n      localStorage.setItem('filter', filter);\n    }\n  }, {\n    key: \"deleteTodos\",\n    value: function deleteTodos(ids) {\n      var updateTodos = this.todos.filter(function (todo) {\n        return !ids.includes(todo.id);\n      });\n      this.todos = updateTodos;\n      localStorage.setItem('todos', JSON.stringify(updateTodos));\n    }\n  }, {\n    key: \"changeStatus\",\n    value: function changeStatus(ids, status) {\n      this.todos.map(function (todo) {\n        if (ids.includes(todo.id)) {\n          todo.done = status === 'DONE';\n        }\n\n        return todo;\n      });\n      localStorage.setItem('todos', JSON.stringify(this.todos));\n    }\n  }]);\n\n  return TodoStore;\n}();\n\nvar todoStore = new TodoStore();\nexport default todoStore;","map":{"version":3,"names":["nanoid","makeAutoObservable","toJS","TodoStore","filter","localStorage","getItem","todos","JSON","parse","id","title","done","push","show","setItem","stringify","todo","map","ids","updateTodos","includes","status","todoStore"],"sources":["/Users/vadymmelnychenko/WebstormProjects/test-task/src/stores/todo.store.ts"],"sourcesContent":["import {nanoid} from 'nanoid'\nimport {makeAutoObservable, toJS} from \"mobx\";\n\nexport interface ITodo {\n    id: string;\n    title: string;\n    done: boolean\n}\n\n\nexport interface ITodoStore {\n    filter: string;\n    todos: ITodo[];\n    addTodo: (title: string) => void;\n    removeTodo: (id: string) => void;\n    toggleDone: (id: string) => void;\n    show: (filter: string) => ITodo[];\n    setFilter: (filter: string) => void;\n    deleteTodos: (ids: string[]) => void;\n    changeStatus: (ids: string[], status: string) => void;\n}\n\nclass TodoStore implements ITodoStore {\n    filter: string = localStorage.getItem('filter') ?? 'ALL'\n    todos: ITodo[] = localStorage.getItem('todos') ? JSON.parse(localStorage.getItem('todos')!) : [{\n        id: nanoid(),\n        title: \"'lala'\",\n        done: false\n    },\n    ]\n\n    constructor() {\n        makeAutoObservable(this)\n    }\n\n    addTodo(title: string) {\n        this.todos.push({\n            id: nanoid(),\n            title,\n            done: false\n        });\n        this.show(this.filter);\n        localStorage.setItem('todos', JSON.stringify(this.todos))\n    }\n\n    removeTodo(id: string) {\n        this.todos = this.todos.filter(todo => todo.id !== id);\n        this.show(this.filter);\n        localStorage.setItem('todos', JSON.stringify(this.todos))\n    }\n\n    toggleDone(id: string) {\n        this.todos.map((todo) => {\n            if (todo.id === id) {\n                todo.done = !todo.done;\n            }\n        });\n        localStorage.setItem('todos', JSON.stringify(this.todos))\n    }\n\n    show(filter: string) {\n        switch (filter) {\n            case \"ALL\":\n                return toJS(this.todos);\n            case \"DONE\":\n                return toJS(this.todos.filter(todo => todo.done));\n            default:\n                return toJS(this.todos);\n        }\n    }\n\n    setFilter(filter: string) {\n        this.filter = filter;\n        localStorage.setItem('filter', filter);\n    }\n\n    deleteTodos(ids: string[]) {\n        const updateTodos = this.todos.filter(todo => !ids.includes(todo.id));\n        this.todos = updateTodos;\n        localStorage.setItem('todos', JSON.stringify(updateTodos))\n    }\n\n    changeStatus(ids: string[], status: string): void {\n        this.todos.map(todo => {\n            if (ids.includes(todo.id)) {\n                todo.done = status === 'DONE';\n            }\n            return todo;\n        });\n        localStorage.setItem('todos', JSON.stringify(this.todos))\n    }\n}\n\nconst todoStore = new TodoStore()\nexport default todoStore\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}